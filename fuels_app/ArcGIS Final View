<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="initial-scale=1,maximum-scale=1,user-scalable=no"
    />
    <title>
      Basemaps with different projections | Sample | ArcGIS Maps SDK for
      JavaScript 4.26
    </title>

    <link
      rel="stylesheet"
      href="https://js.arcgis.com/4.26/esri/themes/light/main.css"
    />
    <script src="https://js.arcgis.com/4.26/"></script>

    <style>
      html,
      body,
      #viewDiv {
        padding: 0;
        margin: 0;
        height: 100%;
        width: 100%;
      }
      #srDiv {
        height: 40px;
        padding: 10px;
      }
    </style>

    <script>
      require([
        "esri/Map",
        "esri/views/MapView",
        "esri/portal/Portal",
        "esri/widgets/BasemapGallery",
        "esri/widgets/BasemapGallery/support/PortalBasemapsSource",
        "esri/widgets/Expand",
        "esri/Graphic",
        "esri/geometry/Point",
        "esri/symbols/SimpleMarkerSymbol",
        "esri/PopupTemplate"
      ], function (
        Map,
        MapView,
        Portal,
        BasemapGallery,
        PortalBasemapsSource,
        Expand,
        Graphic,
        Point,
        SimpleMarkerSymbol,
        PopupTemplate
      ) {
        const portal = new Portal();

        // source for basemaps from a portal group
        // containing basemaps with different projections
        const source = new PortalBasemapsSource({
          portal,
          query: {
            id: "bdb9d65e0b5c480c8dcc6916e7f4e099"
          }
        });

        const map = new Map({
          basemap: {
            portalItem: {
              id: "8d91bd39e873417ea21673e0fee87604" // nova basemap
            }
          }
        });

        // FWB AOR VIEW
        // Integration with database needed
        const view = new MapView({
          container: "viewDiv",
          map: map,
          center: [-86.617928, 30.49801], // Change based off AOR - initial input
          zoom: 10.5,
          constraints: {
            snapToZoom: false
          }
        });
        view.ui.add("srDiv", "top-right");

        const bgExpand = new Expand({
          view,
          content: new BasemapGallery({ source, view }),
          expandIconClass: "esri-icon-basemap"
        });
        view.ui.add(bgExpand, "top-right");

        view.watch("spatialReference", () => {
          document.getElementById(
            "srDiv"
          ).innerHTML = `view.spatialReference.wkid = <b>${view.spatialReference.wkid}</b>`;
        });

        // Circle button locations and comments
        // Integration with database needed
        const locations = [
          {
            name: "Eglin",
            coordinates: [-86.5533, 30.4779], // Initial input needed
            comment: "JAA = 3.5M <br>" +
                     "Diesel = 73K <br>" +
                     "Acft Availability = 40 / 42",
            color: [144, 255, 144], 
            outline: {
                color: [144, 255, 144],
                width: 3,
            },
            style: "circle",
            size: "21px" // Integration with database needed - Change size based off inventory
          },
          {
            name: "Hurlburt",
            coordinates: [-86.6977, 30.42192], // Initial input needed
            comment: "JAA = 2.6M <br>" + 
                     "Diesel = 36K <br>" + 
                     "Acft Availability = 28 / 32 <br>", // Integration with database needed - sum of ATGs
            color: [144, 255, 144], 
            outline: {
                color: [144, 255, 144],
                width: 3,
            },
            style: "circle",
            size: "13px" // Integration with database needed - Change size based off inventory
          },
          {
            name: "Duke",
            coordinates: [-86.52278, 30.641278], // Initial input needed
            comment: "JAA = 1.1M <br>" + 
                     "Diesel = 5K <br>" + 
                     "Acft Availability = 14 / 14 <br>", // Integration with database needed - sum of ATGs
            color: [144, 255, 144], //[255,255,102]
            outline: {
                color: [144, 255, 144],
                width: 3,
            },
            style: "circle",
            size: "8px" // Integration with database needed - Change size based off inventory
          },
          {
            name: "VPS - Civilian",
            coordinates: [-86.5218, 30.4833],
            comment: "JAA = 1.8M <br>" + 
                     "Contract Status: Current", // Integration with database needed - JPO manual input required
            color: [144, 255, 144], //[255,255,102]
            outline: {
                color: [255, 255, 255],//[144, 255, 144], 
                width: 1,
            },
            style: "circle",
            size: "12px" // Integration with database needed - Change size based off inventory
          },
          {
            name: "Barge",
            coordinates: [-86.65662, 30.35921], // Integration with database needed (GPS)
            comment: "JAA = 1.25M <br>" + 
                     "Eglin: 20 hrs <br>" +
                     "Hurlburt: 48 hrs", // Integration with database needed
            color: "blue", 
            style: "square",
            size: "11px" // Integration with database needed - Change size based off inventory
          },
          {
            name: "Tank Truck",
            coordinates: [-86.52937, 30.56761], // Integration with database needed (GPS)
            comment: "JAA = 8K <br>" +
                     "Duke:  1 hrs", // Integration with database needed (ETA) - manual input on load
            color: "blue",
            style: "circle",
            size: "6px"
          },
          {
            name: "Tank Truck",
            coordinates: [-86.47686, 30.54756], // Integration with database needed (GPS)
            comment: "JAA = 8K <br>" +
                     "Eglin: .5 hrs", // Integration with database needed (ETA) - manual input on load
            color: "blue",
            style: "circle",
            size: "6px"
          },
          {
            name: "Tank Truck",
            coordinates: [-86.57412, 30.45387], // Integration with database needed (GPS)
            comment: "JAA = 8K <br>" +
                     "Eglin:  .2 hrs", // Integration with database needed (ETA) - manual input on load
            color: "blue",
            style: "circle",
            size: "6px"
          },
          {
            name: "Tank Truck",
            coordinates: [-86.83860, 30.40974], // Integration with database needed (GPS)
            comment: "JAA = 8K <br>" +
                     "Duke:  .5 hrs", // Integration with database needed (ETA) - manual input on load
            color: [255, 255, 255],
            color: "blue",
            style: "circle",
            size: "6px"
          }
        ];

        locations.forEach((location) => {
          // Create a Point geometry
          const point = new Point({
            longitude: location.coordinates[0],
            latitude: location.coordinates[1]
          });

          // Create a SimpleMarkerSymbol for the circle button
          const markerSymbol = new SimpleMarkerSymbol({
            style: location.style,
            color: location.color,
            outline: location.outline,
            size: location.size,//"14px"
          });

          // Create a PopupTemplate for the text box
          const popupTemplate = new PopupTemplate({
            title: location.name,
            content: location.comment
          });

          // Create a Graphic object for the circle button
          const buttonGraphic = new Graphic({
            geometry: point,
            symbol: markerSymbol,
            popupTemplate: popupTemplate
          });

          // Add the circle button to the view
          view.graphics.add(buttonGraphic);
        });
      });
    </script>
  </head>

  <body>
    <div id="viewDiv"></div>
    <div id="srDiv" class="esri-widget"></div>
  </body>
</html>


